@using KikoleSite.Elite.Views;
@using KikoleSite.Elite.Extensions;
@model KikoleSite.Elite.ViewDatas.PlayerViewData

<fieldset>
    <legend>General information</legend>
    <div class="formBlock">
        <label class="formLabel">Real name:</label>
        <label style="color: @Model.Color">@Model.RealName</label>
    </div>
    <div class="formBlock">
        <label class="formLabel">Surname:</label>
        <label style="color: @Model.Color">@Model.SurName</label>
    </div>
    <div class="formBlock">
        <label class="formLabel">Country:</label>
        <label>@Model.Country</label>
    </div>
    <div class="formBlock">
        <label class="formLabel">First activity date:</label>
        <label>@Model.JoinDate.ToString("yyyy-MM-dd")</label>
    </div>
    <div class="formBlock">
        <label class="formLabel">Last activity date:</label>
        <label>@Model.LastActivityDate.ToString("yyyy-MM-dd")</label>
    </div>
</fieldset>

<fieldset>
    <legend>Ranking highlights</legend>
    <div class="formBlock">
        <label class="formLabel">Best points ranking:</label>
        <label><span style="color: red">@Model.BestPointsRank.rank.ToRankString()</span> with <span style="color: gold">@Model.BestPointsRank.points</span> points, the <span style="color: cornflowerblue">@Model.BestPointsRank.date.ToString("yyyy-MM-dd")</span></label>
    </div>
    <div class="formBlock">
        <label class="formLabel">Best time ranking:</label>
        <label><span style="color: red">@Model.BestTimeRank.rank.ToRankString()</span> with a time of <span style="color: gold">@Model.BestTimeRank.time.ToString("c")</span>, the <span style="color: cornflowerblue">@Model.BestTimeRank.date.ToString("yyyy-MM-dd")</span></label>
    </div>
    <div class="formBlock2">
        <table class="dual-box">
            <tbody>
                <tr>
                    <th colspan="2">Points highlights</th>
                </tr>
                <tr>
                    <th>Date</th>
                    <th>Points</th>
                </tr>
                @if (Model.RankingPointsMilestones.Count > 0)
                {
                    foreach (var rpm in Model.RankingPointsMilestones)
                    {
                        <tr>
                            <td>@rpm.date.ToString("yyyy-MM-dd")</td>
                            <td>@rpm.points</td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="2">No highlight!</td>
                    </tr>
                }
            </tbody>
        </table>
        <table class="dual-box last">
            <tbody>
                <tr>
                    <th colspan="2">Rank highlights</th>
                </tr>
                <tr>
                    <th>Date</th>
                    <th>Rank</th>
                </tr>
                @if (Model.RankingMilestones.Count > 0)
                {
                    foreach (var rkm in Model.RankingMilestones)
                    {
                        <tr>
                        <td>@rkm.date.ToString("yyyy-MM-dd")</td>
                        <td>@rkm.rank.ToRankString()</td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="2">No highlight!</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="formBlock3" id="rankingHistory"></div>
</fieldset>

<fieldset>
    <legend>Untied world records</legend>
    @if (Model.WorldRecords.UntiedWorldRecords.Count > 0)
    {
        await Html.RenderPartialAsync("~/Elite/Views/LongestStanding.cshtml", new KikoleSite.Elite.ViewDatas.LongestStandingViewData { Standings = Model.WorldRecords.UntiedWorldRecords }).ConfigureAwait(false);
    }
    else
    {
        <label>No untied world record!</label>
    }
</fieldset>

<fieldset>
    <legend>Untied world records slayed</legend>
    @if (Model.WorldRecords.UntiedSlayWorldRecords.Count > 0)
    {
        await Html.RenderPartialAsync("~/Elite/Views/LongestStanding.cshtml", new KikoleSite.Elite.ViewDatas.LongestStandingViewData { Standings = Model.WorldRecords.UntiedSlayWorldRecords }).ConfigureAwait(false);
    }
    else
    {
        <label>No untied world record slayed!</label>
    }
</fieldset>

<fieldset>
    <legend>World records slayed</legend>
    @if (Model.WorldRecords.SlayWorldRecords.Count > 0)
    {
        await Html.RenderPartialAsync("~/Elite/Views/LongestStanding.cshtml", new KikoleSite.Elite.ViewDatas.LongestStandingViewData { Standings = Model.WorldRecords.SlayWorldRecords }).ConfigureAwait(false);
    }
    else
    {
        <label>No slayed world record!</label>
    }
</fieldset>

<fieldset>
    <legend>All world records</legend>
    @if (Model.WorldRecords.WorldRecords.Count > 0)
    {
        await Html.RenderPartialAsync("~/Elite/Views/LongestStanding.cshtml", new KikoleSite.Elite.ViewDatas.LongestStandingViewData { Standings = Model.WorldRecords.WorldRecords }).ConfigureAwait(false);
    }
    else
    {
        <label>No world record!</label>
    }
</fieldset>

<style>
    .formLabel {
        width: 120px;
        display: inline-block;
        text-align: right;
        margin-right: 5px;
    }

    .formBlock {
        margin-top: 5px;
        margin-bottom: 5px;
        height: 20px;
    }

    .formBlock2 {
        margin-top: 5px;
        margin-bottom: 5px;
    }

    .formBlock3 {
        margin-top: 5px;
        margin-bottom: 5px;
        float:left;
    }
</style>

<script src="https://www.gstatic.com/charts/loader.js"></script>
<script>
    $(document).ready(function () {
        google.charts.load('current', { packages: ['corechart'] });
        google.charts.setOnLoadCallback(() => {
            var sourceDatas = [['Date', 'Rank']];
            @if (Model.RankingHistory.Count > 0)
            {
                foreach (var rh in Model.RankingHistory)
                {
                    <text>
                    sourceDatas.push([new Date(@rh.date.Year, @rh.date.Month, @rh.date.Day), @rh.rank]);
                    </text>
                }
            }
            else
            {
                var now = System.DateTime.Today;
                var start = Model.Game.GetEliteFirstDate();
                <text>
                sourceDatas.push([new Date(@start.Year, @start.Month, @start.Day), 9999]);
                sourceDatas.push([new Date(@now.Year, @now.Month, @now.Day), 9999]);
                </text>
            }
            var tableDatas = google.visualization.arrayToDataTable(sourceDatas);
            var options = {
                width: 892,
                height: 502,
                chartArea: {
                    left: 15, top: 15, width: "95%", height: "90%"
                },
                legend: { position: 'none' }
            };
            new google.visualization
                .LineChart(document.getElementById('rankingHistory'))
                .draw(tableDatas, options);
        });
    });
</script>