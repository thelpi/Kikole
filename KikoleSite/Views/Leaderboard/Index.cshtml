@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer localizer
@model LeaderboardModel

@if (Model.Awards != null)
{
    await Html.RenderPartialAsync("SingleAward", (localizer["BestPlayersMonthPoints"].Value, Model.Awards.PointsAwards.Cast<KikoleSite.Api.Models.BaseAward>())).ConfigureAwait(false);
    await Html.RenderPartialAsync("SingleAward", (localizer["BestPlayersMonthTime"].Value, Model.Awards.TimeAwards.Cast<KikoleSite.Api.Models.BaseAward>())).ConfigureAwait(false);
    await Html.RenderPartialAsync("SingleAward", (localizer["BestPlayersMonthCount"].Value, Model.Awards.CountAwards.Cast<KikoleSite.Api.Models.BaseAward>())).ConfigureAwait(false);
    await Html.RenderPartialAsync("SingleAward", (localizer["HardKikoleMonth"].Value, Model.Awards.HardestKikoles.Cast<KikoleSite.Api.Models.BaseAward>())).ConfigureAwait(false);
    await Html.RenderPartialAsync("SingleAward", (localizer["EasyKikoleMonth"].Value, Model.Awards.EasiestKikoles.Cast<KikoleSite.Api.Models.BaseAward>())).ConfigureAwait(false);
    <br />
}

<form action="/Leaderboard" method="post">
    <h3>@localizer["CustomizeLeaderboard"]</h3>
    <div style="margin-top: 5px">
        <label style="width: 150px; text-align: right">@localizer["SortType"]</label>
        @Html.DropDownListFor(m => m.SortType, Model.SortTypes.Select(x => new SelectListItem(x.GetLabel(), x.ToString())))
    </div>
    <div style="margin-top: 5px">
        <label style="width: 150px; text-align: right">@localizer["FromDate"]</label>
        @Html.EditorFor(m => m.MinimalDate)
    </div>
    <div style="margin-top: 5px">
        <label style="width: 150px; text-align: right">@localizer["ToDate"]</label>
        @Html.EditorFor(m => m.MaximalDate)
    </div>
    <div style="margin-top: 5px">
        <input style="margin-left: 155px" type="submit" value="@localizer["GetRanking"]" />
    </div>

    <h3>@Model.BoardName</h3>
    <span>(@Html.Raw(string.Format(localizer["LeaderboardDesc"].Value, Model.Leaderboard.Sort.GetLabel(), Model.Leaderboard.StartDate.ToNaString(), Model.Leaderboard.EndDate.ToNaString())))</span>
    <table style="margin-top: 5px">
        <thead>
            <tr>
                <th style="text-align: center; width: 50px">@localizer["PosShortHeader"]</th>
                <th style="text-align: center; color: crimson; width: 150px">@localizer["UsernameHeader"]</th>
                <th style="text-align: center; width: 75px">@localizer["PointsHeader"]</th>
                <th style="text-align: center; width: 100px">@localizer["BestTimeHeader"]</th>
                <th style="text-align: center; width: 75px">@localizer["FoundHeader"]</th>
                <th style="text-align: center; width: 75px">@localizer["AttemptedHeader"]</th>
                <th style="text-align: center; width: 75px">@localizer["ProposedHeader"]</th>
            </tr>
        </thead>
        <tbody>
            @{
                var i = 0;
            }
            @foreach (var leaderItem in Model.Leaderboard.Items)
            {
                var background = i % 2 == 0 ? "white" : "azure";
                <tr style="background-color: @background">
                    <td style="text-align: center">@leaderItem.Rank</td>
                    <td style="color: crimson"><a href="/Leaderboard?userId=@leaderItem.UserId">@leaderItem.UserName</a></td>
                    <td style="text-align: right">@leaderItem.Points</td>
                    <td style="text-align: right">@leaderItem.BestTime.ToNaString()</td>
                    <td style="text-align: right">@leaderItem.KikolesFound</td>
                    <td style="text-align: right">@leaderItem.KikolesAttempted</td>
                    <td style="text-align: right">@leaderItem.KikolesProposed</td>
                </tr>
                i++;
            }
        </tbody>
    </table>

    <h3>@localizer["DailyLeaderboard"]</h3>
    @Html.EditorFor(m => m.LeaderboardDay)
    @Html.DropDownListFor(m => m.DaySortType, Model.DaySortTypes.Select(x => new SelectListItem(x.GetLabel(), x.ToString())))
    <input type="submit" value="Ok" />
    <table style="margin-top: 5px">
        <thead>
            <tr>
                <th style="width: 50px">@localizer["PosShortHeader"]</th>
                <th style="color: crimson; width: 150px">@localizer["UsernameHeader"]</th>
                <th style="width: 100px">@localizer["TimeHeader"]</th>
                <th>@localizer["PointsHeader"]</th>
            </tr>
        </thead>
        <tbody>
            @{
                i = 0;
            }
            @foreach (var leader in Model.TodayLeaders)
            {
                var background = leader.SuccessCount == 0 ? "lavender" : (i % 2 == 0 ? "white" : "azure");
                <tr style="background-color: @background">
                    <td>@leader.Position</td>
                    <td style="color: crimson"><a href="/Leaderboard?userId=@leader.UserId">@leader.Login</a></td>
                    <td>@leader.BestTime.ToNaString()</td>
                    <td>@leader.TotalPoints</td>
                </tr>
                i++;
            }
        </tbody>
    </table>
    <label>@string.Format(localizer["ActiveUsers"].Value, Model.TotalAttemps, Model.TotalSuccessRate)</label><br />
    @if (Model.TotalAttemps != Model.TodayAttemps)
    {
        <label>@string.Format(localizer["ActiveUsersToday"].Value, Model.TodayAttemps, Model.TodaySuccessRate)</label>
    }
    @if (Model.Searchers?.Count > 0)
    {
        <table style="margin-top: 5px">
            <thead>
                <tr>
                    <th style="color: crimson; width: 150px">@localizer["UsernameHeaderInGoing"]</th>
                </tr>
            </thead>
            <tbody>
                @{
                    i = 0;
                }
                @foreach (var searcher in Model.Searchers)
                {
                    var background = (i % 2 == 0 ? "white" : "azure");
                    <tr style="background-color: @background">
                        <td style="color: crimson"><a href="/Leaderboard?userId=@searcher.Item1">@searcher.Item2</a></td>
                    </tr>
                    i++;
                }
            </tbody>
        </table>
    }
</form>