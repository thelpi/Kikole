@using KikoleSite.Helpers
@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer localizer
@model UserStatsModel

<h3>@localizer["GeneralInfo"]</h3>
<fieldset class="smallTopMargin">
    <legend class="redtext">@Model.Login</legend>
    <div class="smallTopMargin">
        <label class="mainFormSectionLabel">@localizer["RegistrationDate"]</label>
        <label class="redtext">@Model.RegistrationDate.ToNaString()</label>
    </div>
    <div class="smallTopMargin">
        <label class="mainFormSectionLabel">@localizer["BestTime"]</label>
        <label class="redtext">@Model.BestTime</label>
    </div>

    <table class="smallTopMargin">
        <thead>
            <tr>
                <th class="tabDataHead"></th>
                <th class="tabDataHead">@localizer["DayOne"]</th>
                <th class="tabDataHead">@localizer["AllDays"]</th>
            </tr>
        </thead>
        <tbody>
            <tr class="even">
                <td class="tabData">@localizer["Attempts"]</td>
                <td class="tabData">@Model.AttemptsDayOne (@Model.AttemptDayOneRate %)</td>
                <td class="tabData">@Model.Attempts (@Model.AttemptRate %)</td>
            </tr>
            <tr class="odd">
                <td class="tabData">@localizer["Successes"]</td>
                <td class="tabData">@Model.SuccessesDayOne (@Model.SuccessDayOneRate %)</td>
                <td class="tabData">@Model.Successes (@Model.SuccessRate %)</td>
            </tr>
            <tr class="even">
                <td class="tabData">@localizer["TotalScore"]</td>
                <td class="tabData">@Model.TotalPointsDayOne</td>
                <td class="tabData">@Model.TotalPoints</td>
            </tr>
            <tr class="odd">
                <td class="tabData">@localizer["AveragePoints"]</td>
                <td class="tabData">@Model.PointsPerAttemptDayOne</td>
                <td class="tabData">@Model.PointsPerAttempt</td>
            </tr>
            <tr class="even">
                <td class="tabData">@localizer["BestScore"]</td>
                <td class="tabData">@Model.BestPointsDayOne</td>
                <td class="tabData">@Model.BestPoints</td>
            </tr>
            <tr class="odd">
                <td class="tabData">@localizer["AverageTime"]</td>
                <td class="tabData">@Model.AverageTimeDayOne</td>
                <td class="tabData">@Model.AverageTime</td>
            </tr>
        </tbody>
    </table>
</fieldset>

<h3>@localizer["StatsByDay"]</h3>
<table class="mediumTopMargin">
    <thead>
        <tr>
            <th class="tabDataHead">@localizer["DateHeader"]</th>
            <th class="tabDataHead">@localizer["AnswerHeader"]</th>
            <th class="tabDataHead">@localizer["AttemptHeader"] *</th>
            <th class="tabDataHead">@localizer["SuccessHeader"] *</th>
            <th class="tabDataHead">@localizer["PointsHeader"]</th>
            <th class="tabDataHead">@localizer["PointsRankHeader"]</th>
            <th class="tabDataHead">@localizer["TimeHeader"]</th>
            <th class="tabDataHead">@localizer["TimeRankHeader"]</th>
        </tr>
    </thead>
    <tbody>
        @{
            var i = 0;
        }
        @foreach (var stat in Model.Stats)
        {
            var attemptTdClass = stat.AttemptDayOne == true ? "tabDataBold" : "tabData";
            var successTdClass = stat.SuccessDayOne == true ? "tabDataBold" : "tabData";
            var trClass = stat.IsCreator ? "creator" : (i % 2 == 0 ? "even" : "odd");
            <tr class="@trClass">
                <td class="tabData"><a href="/?day=@stat.DaysBefore">@stat.Date.ToNaString()</a></td>
                <td class="tabData">@stat.Answer</td>
                <td class="@attemptTdClass">@stat.Attempt.ToYesNo()</td>
                <td class="@successTdClass">@stat.Success.ToYesNo()</td>
                <td class="tabData">@stat.Points.ToNaString()</td>
                <td class="tabData">@stat.PointsPosition.ToNaString()</td>
                <td class="tabData">@stat.Time.ToNaString()</td>
                <td class="tabData">@stat.TimePosition.ToNaString()</td>
            </tr>
            i++;
        }
    </tbody>
</table>
<div>@localizer["BoldFirstDay"]</div>

<h3>@localizer["BadgesHead"]</h3>
<fieldset class="smallTopMargin">
    <legend>@localizer["BadgeYouOwn"]</legend>
    @if (Model.Badges.Count == 0)
    {
        <div>@localizer["NoBadge"]</div>
    }
    else
    {
        foreach (var badge in Model.Badges)
        {
            var color = !badge.Hidden ? "transparent" : "gold";
            <div class="smallTopMargin" style="float: left; width: 350px; min-height: 120px; border: solid 1px; border-color: black; padding: 5px; margin: 5px; border-radius: 5%; background-color: @color">
                <div class="greentext" style="text-align:center; font-size: large">@badge.Name</div>
                <div style="text-align:center">@badge.Description</div>
                @if (!badge.Hidden)
                {
                    <div style="text-align:center">@localizer["GotThe"] @badge.GetDate.ToNaString()</div>
                }
                @if (Model.IsHimself)
                {
                    if (badge.Users == 1)
                    {
                        <div style="text-align:center; font-weight: bold">@localizer["OnlyOne"]</div>
                    }
                    else
                    {
                        var v = badge.Users - 1;
                        <div style="text-align:center"><span class="redtext">@v</span> @localizer[v == 1 ? "OtherUser" : "OtherUsers"]</div>
                    }
                }
                else
                {
                    if (badge.Users == 1)
                    {
                        <div style="text-align:center; font-weight: bold">@localizer["OnlyOneNotMe"]</div>
                    }
                    else
                    {
                        <div style="text-align:center"><span class="redtext">@badge.Users</span> @localizer["OtherUsersNotMe"]</div>
                    }
                }
            </div>
        }
        <div style="clear: both" />
    }
</fieldset>

<fieldset class="smallTopMargin">
    <legend>@localizer["BadgeYouDontOwn"]</legend>
    @if (Model.MissingBadges.Count == 0)
    {
        <div>@localizer["EveryBadge"]</div>
    }
    else
    {
        foreach (var badge in Model.MissingBadges)
        {
            <div class="smallTopMargin" style="float: left; width: 350px; min-height: 120px; border: solid 1px; padding: 5px; margin: 5px; border-radius: 5%;">
                <div class="redtext" style="text-align:center; font-size: large">@badge.Name</div>
                <div style="text-align:center">@badge.Description</div>
                @if (badge.Users == 0)
                {
                    <div style="text-align:center; font-weight: bold"><span class="redtext">@localizer["Nobody"]</span> @localizer["NoUserBadges"]</div>
                }
                else
                {
                    <div style="text-align:center; font-weight: bold"><span class="redtext">@badge.Users</span> @localizer[badge.Users == 1 ? "UserBadges" : "UsersBadges"]</div>
                }
            </div>
        }
        <div style="clear: both" />
    }
</fieldset>