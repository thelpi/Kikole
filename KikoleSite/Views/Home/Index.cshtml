@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer localizer
@model HomeModel
<div>
    @if (!string.IsNullOrWhiteSpace(Model.MessageToDisplay) && Model.IsErrorMessageForced)
    {
        <div style="margin-top: 20px">
            <label style="color:crimson">@Model.MessageToDisplay</label>
        </div>
    }
    @if (Model.AlmostThere)
    {
        <div style="margin-top: 20px; color:crimson; font-size: large">
            @localizer["AlmostThere"]
        </div>
    }
    else if (string.IsNullOrWhiteSpace(Model.LoggedAs))
    {
        @if (!string.IsNullOrWhiteSpace(Model.Message))
        {
            <div style="margin-top: 20px; color:crimson; font-size: large">
                <fieldset style="padding: 15px; border-color: red; border-width: 1px; border-style: solid ">
                    @Html.Raw(Model.Message)
                </fieldset>
            </div>
        }
        await Html.RenderPartialAsync("Partial/Rules", Model.Chart).ConfigureAwait(false);
        <div style="margin-top: 40px">
            <label>@localizer["YouAreNotLogged"]</label>
        </div>
        <div style="margin-top: 10px">
            @localizer["AccountMandatory"]
        </div>
    }
    else
    {
        @if (!string.IsNullOrWhiteSpace(Model.Message))
        {
            <div style="margin-top: 20px; color:crimson; font-size: large">
                @Html.Raw(Model.Message)
            </div>
        }
        @if (!string.IsNullOrWhiteSpace(Model.PlayerCreator))
        {
            <div style="margin-top: 20px; font-size: large">
                @Html.Raw(string.Format(localizer["SubmittedBy"].Value, Model.PlayerCreator))
            </div>
        }
        <div style="margin-top: 10px">
            <label>@localizer["LoggedAs"] <span style="color: forestgreen">@Model.LoggedAs</span></label>
        </div>
        <div style="margin-top: 10px">
            <script>
                function handler(e) {
                    window.location.href = "/?day=" + daysBetween(e.target.value, Date.now());
                }
            </script>
            @if (!Model.NoPreviousDay)
            {
                <a href="/?day=@Model.PreviousDay">@localizer["PreviousDay"]</a>
            }
            <input type="date" onchange="handler(event);" value="@DateTime.Now.AddDays(-Model.CurrentDay).ToString("yyyy-MM-dd")">
            @if (Model.CurrentDay > 0 || Model.IsAdmin)
            {
                <a href="/?day=@Model.NextDay">@localizer["NextDay"]</a>
            }
            @if (Model.IsAdmin && Model.CurrentDay < 0)
            {
                <div>
                    <a href="/Admin/PlayerEdit?playerId=@Model.PlayerId">@localizer["GoToPlayerClues"]</a>
                </div>
            }
        </div>
        @if (!string.IsNullOrWhiteSpace(Model.PlayerName))
        {
            if (Model.CurrentDay == 0 && !Model.IsCreator)
            {
                <div style="margin-top: 5px">
                    <label>@Html.Raw(string.Format(localizer["PlayerFoundCongrats"].Value, Model.PlayerName)) @localizer["ComeBackTomorrow"]</label>
                </div>
                <div>@Html.Raw(string.Format(localizer["FinalScore"].Value, Model.Points))</div>
                await Html.RenderPartialAsync("Partial/Badges", Model.Badges).ConfigureAwait(false);
            }
            else if (Model.CurrentDay == 0)
            {
                <div style="margin-top: 5px">
                    <label>@localizer["PlayerIs"] <span style="font-style: italic; color:crimson">@Model.PlayerName</span></label>
                </div>
            }
            else
            {
                <div style="margin-top: 5px">
                    <label>@Html.Raw(string.Format(localizer["PlayerWas"].Value, Model.PlayerName, DateTime.Now.AddDays(-Model.CurrentDay).ToNaString()))</label>
                </div>
            }
            <div style="margin-top: 10px">
                @localizer["DayClue"] <span style="font-style:italic">@Model.Clue</span>
            </div>
            <div style="margin-top: 10px">
                @localizer["EasyDayClue"] <span style="font-style:italic">@Model.EasyClue</span>
            </div>
            <div style="margin-top: 10px">
                @localizer["FinalPosition"] <span style="font-style:italic">@Model.Position</span>
            </div>
            <div style="margin-top: 10px">
                @localizer["FinalBirthYear"] <span style="font-style:italic">@Model.BirthYear</span>
            </div>
            <div style="margin-top: 10px">
                @localizer["FinalNationality"] <span style="font-style:italic">@Model.CountryName</span>
            </div>
            <div style="margin-top: 10px">
                @localizer["FinalClubs"]
                @foreach (var club in Model.KnownPlayerClubs.OrderBy(x => x.HistoryPosition))
                {
                    var name = $"{club.HistoryPosition} - {club.Name}";
                    if (club.IsLoan)
                        name += " (p)";
                    <div style="font-style:italic">@name</div>
                }
            </div>
        }
        else
        {
            if (!string.IsNullOrWhiteSpace(Model.MessageToDisplay) && !Model.IsErrorMessageForced)
            {
                <div style="margin-top: 5px">
                    @if (Model.IsErrorMessage)
                    {
                        <label style="color:crimson">@Model.MessageToDisplay</label>
                    }
                    else
                    {
                        <label style="color:forestgreen">@Model.MessageToDisplay</label>
                    }
                </div>
            }
            <div style="margin-top: 5px">@Html.Raw(string.Format(localizer["CurrentScore"].Value, Model.Points))</div>
            await Html.RenderPartialAsync("Partial/Badges", Model.Badges).ConfigureAwait(false);
            <div style="margin-top: 30px; font-size: larger">
                @localizer["DayClue"] <span style="font-style:italic">@Model.Clue</span>
            </div>
            @if (!string.IsNullOrWhiteSpace(Model.EasyClue))
            {
                <div style="margin-top: 30px; font-size: larger">
                    @localizer["EasyDayClue"] <span style="font-style:italic">@Model.EasyClue</span>
                </div>
            }
            else
            {
                <form method="post" action="/">
                    @Html.HiddenFor(m => m.CurrentDay)
                    <div style="margin-top: 15px">
                        <input type="submit" value="@localizer["NeedAnotherClue"]" name="submit-Clue" style="width: 200px; margin-right: 20px" />
                        <span>(-<span style="color: crimson">@Model.Chart.ProposalTypesCost[KikoleSite.Api.Models.Enums.ProposalTypes.Clue].points</span> % @localizer["PointsPercent"])</span>
                    </div>
                </form>
            }
            <!-- clubs -->
            <form method="post" action="/">
                @Html.HiddenFor(m => m.CurrentDay)
                <fieldset style="margin-top: 30px">
                    <div>
                        <div>
                            <label>@localizer["ClubsTitle"]</label>
                        </div>
                        <div>
                            <input type="text" name="ClubNameSubmission" id="clubName" style="width: 300px" />
                            <input type="submit" value="Ok" name="submit-Club" id="submitClub" style="visibility:hidden; width: 0px" />
                            <span>(-<span style="color: crimson">@Model.Chart.ProposalTypesCost[KikoleSite.Api.Models.Enums.ProposalTypes.Club].points</span> @localizer["PointsIfIncorrect"])</span>
                        </div>
                        <div style="font-size: small">(@localizer["TipAboutClubs"])</div>
                    </div>
                    @if (Model.KnownPlayerClubs?.Count > 0)
                    {
                        <div style="margin-top: 15px">
                            <label>@localizer["CareerClubSoFar"]</label>
                            <ul>
                                @foreach (var club in Model.KnownPlayerClubs)
                                {
                                    <li>@string.Format("{0} - {1}{2}", club.HistoryPosition, club.Name, club.IsLoan ? $" ({localizer["LoanInitial"].Value})" : "")</li>
                                }
                            </ul>
                        </div>
                        <div style="font-size: small">(@localizer["ClubTipOne"])</div>
                    }
                    @if (Model.IncorrectClubs?.Count > 0)
                    {
                        <div style="margin-top: 10px">
                            @foreach (var iClub in Model.IncorrectClubs)
                            {
                                <div style="font-size: small; text-decoration: line-through">@iClub</div>
                            }
                        </div>
                    }
                    @if (Model.CanCreateClub)
                    {
                        <div style="margin-top: 10px">
                            <a href="/Admin/Club" target="_blank">@localizer["HelpToCreateClub"]</a> (@localizer["NewTab"])
                        </div>
                        <div style="font-size: small">(@localizer["CreateClubIsGood"])</div>
                    }
                </fieldset>
            </form>
            <!-- nationality -->
            <form method="post" action="/">
                @Html.HiddenFor(m => m.CurrentDay)
                <div style="margin-top: 30px">
                    <div>
                        <label>@localizer["NationalityTitle"]</label>
                    </div>
                    @if (string.IsNullOrWhiteSpace(Model.CountryName))
                    {
                        <div>
                            <input type="text" id="countryName" name="CountryNameSubmissionValue" style="width: 300px" />
                            <input type="hidden" id="countryId" name="CountryNameSubmission" />
                            <input type="submit" value="Ok" id="submitCountry" name="submit-Country" style="visibility: hidden; width: 0px" />
                            <span>(-<span style="color: crimson">@Model.Chart.ProposalTypesCost[KikoleSite.Api.Models.Enums.ProposalTypes.Country].points</span> @localizer["PointsIfIncorrect"])</span>
                        </div>
                        <div style="font-size: small">(@localizer["TipAboutNationality"])</div>
                        @if (Model.IncorrectCountries?.Count > 0)
                        {
                            <div style="margin-top: 10px">
                                @foreach (var iCountry in Model.IncorrectCountries)
                                {
                                    <div style="font-size: small; text-decoration: line-through">@iCountry</div>
                                }
                            </div>
                        }
                    }
                    else
                    {
                        <div>
                            <label>@Model.CountryName</label>
                        </div>
                    }
                </div>
            </form>
            <!-- year -->
            <form method="post" action="/">
                @Html.HiddenFor(m => m.CurrentDay)
                <div style="margin-top: 30px">
                    <div>
                        <label>@localizer["BirthYearTitle"]</label>
                    </div>
                    @if (string.IsNullOrWhiteSpace(Model.BirthYear))
                    {
                        <div>
                            <input type="text" id="birthYearValue" name="BirthYearSubmission" style="width: 100px" />
                            <input type="submit" value="Ok" id="submitYear" name="submit-Year" style="visibility:hidden; width: 0px" />
                            <span>(-<span style="color: crimson">@Model.Chart.ProposalTypesCost[KikoleSite.Api.Models.Enums.ProposalTypes.Year].points</span> @localizer["PointsIfIncorrect"])</span>
                        </div>
                        @if (Model.IncorrectYears?.Count > 0)
                        {
                            <div style="margin-top: 10px">
                                @foreach (var (iYear, iTip) in Model.IncorrectYears)
                                {
                                    <div style="font-size: small"><span style="text-decoration: line-through">@iYear</span> (@iTip)</div>
                                }
                            </div>
                        }
                    }
                    else
                    {
                        <div>
                            <label>@Model.BirthYear</label>
                        </div>
                    }
                </div>
            </form>
            <!-- position -->
            <form method="post" action="/">
                @Html.HiddenFor(m => m.CurrentDay)
                <div style="margin-top: 30px">
                    <div>
                        <label>@localizer["PositionTitle"]</label>
                    </div>
                    @if (string.IsNullOrWhiteSpace(Model.Position))
                    {
                        <div>
                            @Html.DropDownListFor(m => m.PositionSubmission, Model.Positions, new { @style = "width: 150px", @id = "positionSubmission" })
                            <input type="submit" value="Ok" id="submitPosition" name="submit-Position" style="visibility:hidden; width: 0px" />
                            <span>(-<span style="color: crimson">@Model.Chart.ProposalTypesCost[KikoleSite.Api.Models.Enums.ProposalTypes.Position].points</span> @localizer["PointsIfIncorrect"])</span>
                        </div>
                        @if (Model.IncorrectPositions?.Count > 0)
                        {
                            <div style="margin-top: 10px">
                                @foreach (var iPosition in Model.IncorrectPositions)
                                {
                                    <div style="font-size: small; text-decoration: line-through">@iPosition</div>
                                }
                            </div>
                        }
                    }
                    else
                    {
                        <div>
                            <label>@Model.Position</label>
                        </div>
                    }
                </div>
            </form>
            <!-- name -->
            <form method="post" action="/">
                @Html.HiddenFor(m => m.CurrentDay)
                <div style="margin-top: 60px">
                    <div>
                        <label style="color:crimson">@localizer["TypePlayerName"]</label>
                    </div>
                    <div>
                        <input type="text" name="PlayerNameSubmission" value="@Model.PlayerNameSubmission" style="width: 300px; border-color: crimson" />
                        <input type="submit" value="Submit" name="submit-Name" style="visibility:hidden; width: 0px" />
                        <span>(-<span style="color: crimson">@Model.Chart.ProposalTypesCost[KikoleSite.Api.Models.Enums.ProposalTypes.Name].points</span> @localizer["PointsIfIncorrect"])</span>
                    </div>
                    <div style="font-size: small">(@localizer["UseWikiTitle"])</div>
                </div>
                @if (Model.IncorrectNames?.Count > 0)
                {
                    <div style="margin-top: 10px">
                        @foreach (var iName in Model.IncorrectNames)
                        {
                            <div style="font-size: small; text-decoration: line-through">@iName</div>
                        }
                    </div>
                }
            </form>
            <hr />
            await Html.RenderPartialAsync("Partial/Rules", Model.Chart).ConfigureAwait(false);
        }
    }
</div>