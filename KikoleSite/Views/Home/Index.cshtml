@model MainModel
<div>
    <fieldset title="How to play?" style="margin-top: 10px">
        <span style="color: crimson">"Kikole?"</span> is a game where you have to guess a new football player every single day.<br />
        The way to do this is to figure out in which clubs he played (or currently plays) during his career.<br />
        You can also try to guess his nationality.<br />@* and his year of birth*@
        <ul>
            <li>The player can be active or retired.</li>
            <li>All text submissions are case-insensitive and diacritics is ignored.</li>
            <li>You can propose a name at any time (no need to find every clue)</li>
        </ul>
        Score is computed with following rules:
        <ul>
            <li>You start with <span style="color: crimson">1000</span> points</li>
            <li>Asking for the clue costs 500 points</li>
            <li>An incorrect player proposition costs 200 points</li>
            <li>An incorrect club or country proposition costs 100 points</li>
            <li>A good guess on any category costs no points</li>
        </ul>
    </fieldset>
    @if (!string.IsNullOrWhiteSpace(Model.NameOkSubmitted))
    {
        <div style="margin-top: 5px">
            <label>Congratulations! The player was <span style="font-style: italic; color:crimson">@Model.NameOkSubmitted</span>. Come back tomorrow for a new player!</label>
        </div>
        <div>Your final score: <span style="font-style: italic; color:crimson">@Model.Points</span> points</div>
    }
    else
    {
        if (Model.HasWrongGuess)
        {
            <div style="margin-top: 5px">
                <label style="color:crimson">Your guess is wrong!</label>
            </div>
        }
        <div style="margin-top: 5px">Your current score: <span style="font-style: italic; color:crimson">@Model.Points</span> points</div>
        <form method="post" action="/">
            <input type="hidden" name="ClubsOkSerializedOutput" value="@Model.ClubsOkSerializedInput" />
            <input type="hidden" name="CountryOkSubmitted" value="@Model.CountryOkSubmitted" />
            <input type="hidden" name="YearOkSubmitted" value="@Model.YearOkSubmitted" />
            <input type="hidden" name="Points" value="@Model.Points" />
            <fieldset style="margin-top: 30px">
                <div>
                    <div>
                        <label>Enters the name of a club:</label>
                    </div>
                    <div>
                        @Html.TextBoxFor(m => m.SelectedValueClub, new { @style = "width: 300px" })
                        <input type="submit" value="Submit" name="submit-Club" style="visibility:hidden" />
                    </div>
                    <div style="font-size: small">(notice you can enter names forever, regardless as if the whole career has been found already)</div>
                </div>
                @if (Model.ClubsOkSubmitted?.Count > 0)
                {
                    <div style="margin-top: 15px">
                        <label>Career club so far:</label>
                        <ul>
                            @foreach (var club in Model.ClubsOkSubmitted)
                            {
                                <li>@string.Format("{0} - {1}", club.HistoryPosition, club.Name)</li>
                            }
                        </ul>
                    </div>
                    <div style="font-size: small">(no duplicate in case the player comes back to a club he already played)</div>
                }
            </fieldset>

            @*<div style="padding-top: 5px; padding-bottom: 5px">
                    @if (string.IsNullOrWhiteSpace(Model.YearOkSubmitted))
                    {
                        <label style="width: 150px">Guess birth year:</label>
                        @Html.TextBoxFor(m => m.SelectedValueYear, new { @style = "width: 150px" })
                        <input type="submit" value="Submit" name="submit-Year" />
                    }
                    else
                    {
                        <label style="width: 150px">Birth year:</label>
                        <label style="width: 150px">@Model.YearOkSubmitted</label>
                    }
                </div>*@

            <div style="margin-top: 30px">
                <div>
                    <label>Nationality:</label>
                </div>
                @if (string.IsNullOrWhiteSpace(Model.CountryOkSubmitted))
                {
                    <div>
                        @Html.DropDownListFor(m => m.SelectedValueCountry, Model.Countries.Select(x => new SelectListItem(x.Value, x.Key.ToString())), new { @style = "width: 300px" })
                        <input type="submit" value="Submit" name="submit-Country" />
                    </div>
                    <div style="font-size: small">(for players with double nationality, it's the one with int. selections)</div>
                    <div style="font-size: small">(in case above but the player has no selection, both nationality are considered OK)</div>
                }
                else
                {
                    <div>
                        <label>@Model.CountryOkSubmitted</label>
                    </div>
                }
            </div>

            <div style="margin-top: 30px">
                <div>
                    <input type="submit" value="I need help, give me a clue!" name="submit-Clue" style="width: 300px" />
                </div>
                <div style="font-size: small">(this will give you the club where the player has played the most in his career)</div>
            </div>
        </form>
        <form method="post" action="/">
            <input type="hidden" name="ClubsOkSerializedOutput" value="@Model.ClubsOkSerializedInput" />
            <input type="hidden" name="CountryOkSubmitted" value="@Model.CountryOkSubmitted" />
            <input type="hidden" name="YearOkSubmitted" value="@Model.YearOkSubmitted" />
            <input type="hidden" name="Points" value="@Model.Points" />
            <div style="margin-top: 30px">
                <div>
                    <label style="color:crimson">Submit your player here:</label>
                </div>
                <div>
                    @Html.TextBoxFor(m => m.SelectedValueName, new { @style = "width: 300px" })
                    <input type="submit" value="Submit" name="submit-Name" style="visibility:hidden" />
                </div>
            </div>
        </form>
    }
</div>