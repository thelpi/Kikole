<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutClubs" xml:space="preserve">
    <value>A propos des clubs</value>
  </data>
  <data name="AboutClubsDetails" xml:space="preserve">
    <value>&lt;p&gt;Seuls les clubs professionels sont présents dans la carrière du joueur : les réserves et les clubs juniors sont exclus.&lt;/p&gt;
&lt;p&gt;Exemple : Edouard Mendy n'a pas joué à l'Olympique de Marseille (réserve), ni au Havre (junior).&lt;/p&gt;
&lt;p&gt;Les prêts sont inclus dans la carrière, et explicitement indiqués quand c'est le cas.&lt;/p&gt;
&lt;p&gt;L'autocomplétion est exhaustive. Cela signifie que si vous cherchez un club en particulier et qu'il n'apparait pas, alors le joueur du jour n'a pas joué dans ce club.&lt;/p&gt;</value>
  </data>
  <data name="AboutCountry" xml:space="preserve">
    <value>A propos de la nationalité</value>
  </data>
  <data name="AboutCountryDetails" xml:space="preserve">
    <value>&lt;p&gt;Le jeu ne gère pas la nationalité sportive. Les nationalités proposées sont celles administratives, basées sur &lt;a target="_blank" href="https://fr.wikipedia.org/wiki/ISO_3166-1"&gt;cette norme&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Exemple : la nationalité de Ryan Giggs est "Royaume-Uni" et non pas "Pays de Galles".&lt;/p&gt;
&lt;p&gt;Il n'y a qu'une seule nationalité possible par joueur. Quand la nationalité sportive correspond avec une des nationalités administratives, elle est utilisée.&lt;/p&gt;
&lt;p&gt;Il est POSSIBLE, bien que très rare, que le choix soit arbitraire par l'administrateur. Voici quelques cas complexes :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Edouard Mendy est Sénégalais puis qu'il a choisi cette fédération pour être sélectionné ; ce cas n'est pas litigieux en appliquant la règle ci-dessus.&lt;/li&gt;
&lt;li&gt;Jean-Claude Darcheville est Français : on peut dire que c'est un choix de l'administrateur, lié au fait que la fédération de Guyane ne soit pas reconnue par la FIFA.&lt;/li&gt;
&lt;li&gt;Xavi Simons est hollandais : choix de l'administrateur à date, il est encore possible pour lui de faire une sélection A avec l'Espagne.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Enfin, les nationalités n'existant plus sont substituées par les nationalités s'en rapprochant le plus (ce qui peut là encore être arbitraire).&lt;/p&gt;
&lt;p&gt;Exemple : Lev Yachine est considéré Russe, puisque "Union Soviétique" n'est pas disponible.&lt;/p&gt;</value>
  </data>
  <data name="BadGuessClub" xml:space="preserve">
    <value>Une proposition incorrecte pour un des clubs coûte &lt;span style="color: crimson; font-size: large"&gt;{0}&lt;/span&gt; points.</value>
  </data>
  <data name="BadGuessCountry" xml:space="preserve">
    <value>Une proposition incorrecte pour la nationalité coûte &lt;span style="color: crimson; font-size: large"&gt;{0}&lt;/span&gt; points.</value>
  </data>
  <data name="BadGuessName" xml:space="preserve">
    <value>Une proposition incorrecte pour le nom du joueur coûte &lt;span style="color: crimson; font-size: large"&gt;{0}&lt;/span&gt; points.</value>
  </data>
  <data name="BadGuessPosition" xml:space="preserve">
    <value>Une proposition incorrecte pour la position coûte &lt;span style="color: crimson; font-size: large"&gt;{0}&lt;/span&gt; points.</value>
  </data>
  <data name="BadGuessYear" xml:space="preserve">
    <value>Une proposition incorrecte pour l'année de naissance coûte &lt;span style="color: crimson; font-size: large"&gt;{0}&lt;/span&gt; points.</value>
  </data>
  <data name="ClueGuess" xml:space="preserve">
    <value>Demander un second indice coûte &lt;span style="color: crimson; font-size: large"&gt;{0}&lt;/span&gt; points.</value>
  </data>
  <data name="GoodGuess" xml:space="preserve">
    <value>Une proposition correcte dans n'importe quelle catégorie ne coûte &lt;span style="color: forestgreen; font-size: large"&gt;aucun point&lt;/span&gt;.</value>
  </data>
  <data name="Rules" xml:space="preserve">
    <value>&lt;p&gt;&lt;span style="color: crimson; font-size: large"&gt;"Kikolé ?"&lt;/span&gt; est un jeu très simple où vous devez deviner un nouveau footballeur &lt;span style="color: crimson"&gt;tous les jours&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Vos adversaires doivent deviner le même joueur, donc soyez le meilleur pour apparaître dans le &lt;a href="/Leaderboard"&gt;classement&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;Pour trouver le joueur du jour, vous pouvez faire des propositions concernant son année de naissance, poste, nationalité et carrière en club. Un indice de départ est également donné.&lt;/p&gt;
&lt;p&gt;Veuillez noter que le joueur peut être actif ou retraité, de plus les joueuses sont parfois possibles bien que rare.&lt;/p&gt;
&lt;p&gt;Les joueurs de fiction (films, mangas...) ne sont pas autorisés.&lt;/p&gt;
&lt;p&gt;Pour un problème technique, une réclamation ou proposer un joueur (un autre moyen de gagner des points), merci de &lt;a href="/Home/Contact"&gt;me contacter&lt;/a&gt; (il faut être connecté).&lt;/p&gt;</value>
  </data>
  <data name="ScoreIntro" xml:space="preserve">
    <value>Le score est calculé par les rêgles suivantes :</value>
  </data>
  <data name="StarterPoints" xml:space="preserve">
    <value>Vous commencez avec &lt;span style="color: forestgreen; font-size: large"&gt;{0}&lt;/span&gt; points.</value>
  </data>
</root>